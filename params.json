{
  "name": "Spellbook",
  "tagline": "Library for extend the javascript habilities.",
  "body": "## INSTALL/DOWNLOAD\r\nhttp://npmjs.com/package/spellbook\r\n\r\n```sh\r\nnpm install spellbook\r\n```\r\n\r\n## MINIFIED CDN\r\n```\r\nhttps://cdnjs.cloudflare.com/ajax/libs/spellbook/0.0.57/spellbook.min.js\r\nhttps://cdn.rawgit.com/warlock/spellbook/minified/spellbook-min.js\r\nhttps://gitcdn.xyz/repo/warlock/spellbook/minified/spellbook-min.js\r\nhttp://cdn.spellbook.io/spellbook.js\r\n```\r\n\r\n## Node.Js : Import module:\r\n```javascript\r\nvar sb = require(\"spellbook\");\r\n```\r\n\r\n## Web : Import module:\r\n```html\r\n<script src=\"spellbook/spellbook.js\"></script>\r\n<script>\r\n  console.log(sb.range(5,10));\r\n</script>\r\n```\r\n\r\n## Generic tools:\r\n\r\n**Range:**\r\n```javascript\r\nsb.range(0,10);\r\n```\r\n```\r\n-> [0,1,2,3,4,5,6,7,8,9,10]\r\n```\r\n\r\n```javascript\r\nsb.range(-100,100,20);\r\n```\r\n```\r\n-> [-100,-80,-60,-40,-20,0,20,40,60,80,100]\r\n```\r\n\r\n```javascript\r\nsb.range('A','F');\r\n```\r\n```\r\n-> ['A','B','C','D','E','F')\r\n```\r\n\r\n```javascript\r\nsb.range('m','r');\r\n```\r\n```\r\n-> ['m','n','o','p','q','r']\r\n```\r\n\r\n**Clone Object in javascript ES5 with ES6 style:**\r\n```javascript\r\nvar NewObject = sb.assing(obj);\r\nvar NewObject = sb.clone(obj);\r\n```\r\n\r\n**Remove Objects from Array:**\r\n```javascript\r\nsb.remove(array, obj);\r\nsb.remove(array, [obj1, obj2]);\r\n```\r\n\r\n**Clear all values from Array:**\r\n```javascript\r\nsb.clear(array);\r\n```\r\n\r\n**Find Objects from Array:**\r\n```javascript\r\nsb.contains(array, obj);\r\nsb.inArray(array, obj);\r\n```\r\n\r\n**Get the element from the object \"obj\":**\r\n```javascript\r\nvar a = {\r\n    a : {\r\n        b : [\"c\", \"d\"]\r\n    }\r\n};\r\n\r\nsb.get(a, \"a.b.1\");\r\n```\r\n```\r\n-> d\r\n```\r\n\r\n**Random number:**\r\n```javascript\r\nsb.random(5,10);\r\n```\r\n```\r\n-> 6\r\n```\r\n\r\n**sb.capitalize();**\r\n```javascript\r\nsb.capitalize(\"abracadabra\");\r\n```\r\n```\r\n-> Abracadabra\r\n```\r\n\r\n**sb.dos2unix(string); Replace dos endline**\r\n```javascript\r\nsb.dos2unix(string);\r\n```\r\n\r\n**Real date validator:**\r\n```javascript\r\nsb.checkDate('dd-mm-yyyy', '30/02/2015');\r\n```\r\n```\r\n-> false\r\n```\r\n\r\n**Limit of words:**\r\n```javascript\r\nsb.excerpt('One, two, Freddy\\'s coming for you', 3);\r\n```\r\n```\r\n-> 'One, two, Freddy's'\r\n```\r\n\r\n**Class boolean check:**\r\n```javascript\r\nsb.isFunction(obj);\r\nsb.isArray(obj);\r\nsb.isObject(obj);\r\nsb.isNumber(obj);\r\nsb.isInteger(obj);\r\nsb.isString(obj);\r\nsb.isBoolean(obj);\r\n```\r\n\r\n##Iterators\r\n\r\n**sb.each(array, callback_loop(item, index, next_method, end_method), callback_end); Runs next loop when \"next\" method is executed.**\r\n```javascript\r\nvar list = ['a', 'b', 'c'];\r\nsb.each(list, function (item, i, next, end) {\r\n    console.log(\"item: \" + item );\r\n    setTimeout(function () {\r\n        next();\r\n    }, 3000);\r\n}, function () {\r\n    console.log(\"End\");\r\n});\r\n```\r\n```\r\n-> item: a // Wait 3 seconds;\r\n-> item: b // Wait 3 seconds;\r\n-> item: c // Wait 3 seconds;\r\n-> End\r\n```\r\n\r\n**sb.each(callback_loop(item, index, next_method, end_method), callback_end); Runs next loop when \"next\" method is executed. Call \"end\" method for break the loop.**\r\n```javascript\r\nvar list = ['a', 'b', 'c'];\r\nsb.each(list, function (item, i, next, end) {\r\n    console.log(\"item: \" + item );\r\n    setTimeout(function () {\r\n        if (i === 1) {\r\n            end(\"Bye!\");\r\n        } else {\r\n            next();\r\n        }\r\n    }, 3000);\r\n}, function (data) {\r\n    if (data) {\r\n        console.log(\"End: \" + data);\r\n    } else {\r\n        console.log(\"End\");\r\n    }\r\n});\r\n```\r\n```\r\n-> item: a // Wait 3 seconds;\r\n-> item: b // Wait 3 seconds;\r\n-> End: Bye!\r\n```\r\n\r\n**sb.eachParallelLimit(array, number_limit, callback_loop(item, index, next_method), callback_end); Runs in parallel limit and next loop when \"next\" method is executed. Alternative names: eachpl, epl.**\r\n```javascript\r\nvar list = ['a', 'b', 'c', 'd'];\r\nsb.eachpl(list, 2, function (item, i, next) {\r\n    console.log(\"item: \" + item );\r\n    setTimeout(function () {\r\n        next();\r\n    }, 2000);\r\n}, function () {\r\n    console.log(\"End\");\r\n});\r\n```\r\n```\r\n-> item: a\r\n-> item: b\r\n-> item: c // Next to start when next method executed;\r\n-> item: d // Next to start when next method executed;\r\n-> End\r\n```\r\n\r\n**sb.waterfall(functions_array, callback_end); Runs next function when \"done\" method is executed.**\r\n```javascript\r\nsb.waterfall([\r\n    function (done) {\r\n        console.log(\"fire\");\r\n        done(5);\r\n    },\r\n    function (done, data) {\r\n        console.log(\"ice: \" + data);\r\n        done(\"win\");\r\n    }\r\n], function (data) {\r\n    console.log(\"End: \" + data);\r\n});\r\n```\r\n```\r\n-> fire\r\n-> ice: 5\r\n-> End: win\r\n```\r\n\r\n**sb.waterfall(array_functions(done, data), callback_end); Break the fall with \"true\".**\r\n```javascript\r\nsb.waterfall([\r\n    function (done) {\r\n        console.log(\"fire\");\r\n        done(true, 5);\r\n    },\r\n    function (done, data) {\r\n        console.log(\"ice: \" + data);\r\n        done(\"win\");\r\n    }\r\n], function (data) {\r\n    console.log(\"End: \" + data);\r\n});\r\n```\r\n```\r\n-> fire\r\n-> End: 5\r\n```\r\n\r\n\r\n**sb.parallel(array_functions(done), callback_end(data)); Run functions in parallel and then execute \"callback_end\".**\r\n```javascript\r\nsb.parallel([\r\n    function (done) {\r\n        setTimeout(function () {\r\n            console.log(\"hi 3!\");\r\n            done(\"a\")\r\n        }, 3000);\r\n    },\r\n    function (done) {\r\n        setTimeout(function () {\r\n            console.log(\"hi 2!\");\r\n            done(\"b\");\r\n        }, 2000);\r\n    },\r\n    function (done) {\r\n        setTimeout(function () {\r\n            console.log(\"hi 1!\");\r\n            done(\"c\");\r\n        }, 1000);\r\n    }\r\n],function (data) {\r\n        console.log(\"End: \" + JSON.stringify(data));\r\n});\r\n```\r\n```\r\n//Wait 1 second\r\n-> hi 1! //Wait 1 second\r\n-> hi 2! //Wait 1 second\r\n-> hi 3!\r\n-> End: [\"a\",\"b\",\"c\"]\r\n```\r\n\r\n**sb.parallelLimit(number, array_functions(done), callback_end(data)); Run limit of functions in parallel and then execute \"callback_end\".**\r\n```javascript\r\nsb.parallelLimit(2, [\r\n    function (done) {\r\n        setTimeout(function () { console.log(\"go 1!\"); done(\"a\") }, 1000); },\r\n\tfunction (done) {\r\n\t\tsetTimeout(function () { console.log(\"go 2!\"); done(\"b\") }, 3000); },\r\n\tfunction (done) {\r\n\t\tsetTimeout(function () { console.log(\"go 3!\"); done(\"c\") }, 1000); },\r\n    function (done) {\r\n        setTimeout(function () { console.log(\"go 4!\"); done(\"a2\") }, 3000); },\r\n    function (done) {\r\n        setTimeout(function () { console.log(\"go 5!\"); done(\"b2\") }, 1000); },\r\n    function (done) {\r\n        setTimeout(function () { console.log(\"go 6!\"); done(\"c2\") }, 3000); },\r\n    function (done) {\r\n        setTimeout(function () { console.log(\"go 7!\"); done(\"a3\") }, 1000); },\r\n    function (done) {\r\n        setTimeout(function () { console.log(\"go 8!\"); done(\"b3\") }, 3000); },\r\n    function (done) {\r\n        setTimeout(function () { console.log(\"go 9!\"); done(\"c3\") }, 1000); }\r\n],function (data) {\r\n\tconsole.log(\"we: \" + JSON.stringify(data));\r\n});\r\n```\r\n```\r\n-> go 1!\r\n-> go 3!\r\n-> go 2!\r\n-> go 5!\r\n-> go 4!\r\n-> go 7!\r\n-> go 6!\r\n-> go 9!\r\n-> go 8!\r\n-> we: [\"a\",\"b\",\"c\",\"a2\",\"b2\",\"c2\",\"a3\",\"b3\",\"c3\"]\r\n```\r\n\r\n**sb.forever(callback(next, end), callback_end); Loops forever.**\r\n```javascript\r\nsb.forever(function (next, end) {\r\n    console.log(\"Hi!\")\r\n    setTimeout(function () {\r\n        next();\r\n    }, 3000);\r\n});\r\n```\r\n```\r\n-> Hi! // Wait 3 seconds;\r\n-> Hi! // Wait 3 seconds;\r\n-> ...\r\n```\r\n\r\n**sb.forever(callback(next, end), callback_end); Loops forever and break the loop.**\r\n```javascript\r\nvar i = 0;\r\nsb.forever(function (next, end) {\r\n    console.log(\"loop: \" + i);\r\n    if (i>=3) {\r\n        end(\"Now Break!!\")\r\n    }\r\n    i++;\r\n    setTimeout(function () {\r\n        next();\r\n    }, 3000);\r\n}, function (data) {\r\n    console.log(\"Response: \" + data);\r\n});\r\n```\r\n```\r\n-> loop: 0 // Wait 3 seconds;\r\n-> loop: 1 // Wait 3 seconds;\r\n-> loop: 2 // Wait 3 seconds;\r\n-> loop: 3 // Wait 3 seconds;\r\n-> Response: Now Break!!\r\n```\r\n\r\n**sb.times(number, callback(iteration)); Iterates function \"number\" times.**\r\n```javascript\r\nsb.times(3, function (iteration) {\r\n        console.log(\"Abracadabra!\");\r\n});\r\n```\r\n```\r\n-> Abracadabra!\r\n-> Abracadabra!\r\n-> Abracadabra!\r\n```\r\n\r\n**sb.forSync(initial_value, final_value, incremental_value, callback(index, next, end), callback_end(data))**\r\n```javascript\r\nsb.forSync(0, 10, 1, function (index, next, end) {\r\n    console.log(index)\r\n    next(5)\r\n}, function (data) {\r\n    console.log(data)\r\n})\r\n```\r\n```\r\n-> 0\r\n-> 1\r\n-> 2\r\n-> 3\r\n-> 4\r\n-> 5\r\n-> 6\r\n-> 7\r\n-> 8\r\n-> 9\r\n-> 10\r\n-> [ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5 ]\r\n```\r\n\r\n\r\n## CLASS EXTENSION\r\n>Existing class methods will be ignored\r\n\r\n**START CLASS EXTENDER**\r\n```javascript\r\nsb.extender()\r\n```\r\n\r\n**Array.remove(obj);**\r\n\r\n```javascript\r\nvar list = ['a', 2, 'c', 2];\r\nlist.remove(2);\r\n```\r\n```\r\n-> ['a', 'c']\r\n```\r\n\r\n```javascript\r\nvar list = ['a', 2, 'c', 2];\r\nlist.remove([2,'a']);\r\n```\r\n```\r\n-> ['c']\r\n```\r\n\r\n```javascript\r\nvar date = new Date();\r\nvar list = ['a', 'b', 1, '2', date];\r\nlist.remove(['b', 1, date]);\r\n```\r\n```\r\n-> ['a', '2']\r\n```\r\n\r\n**Array.clear();**\r\n```javascript\r\nvar list = ['a', 'b', 'c'];\r\nlist.clear();\r\n```\r\n```\r\n-> []\r\n```\r\n\r\n**Array.random();**\r\n```javascript\r\nvar list = ['a', 'b', 'c'];\r\nlist.random();\r\n```\r\n```\r\n-> 'b'\r\n```\r\n\r\n**Array.shuffle();**\r\n```javascript\r\nvar list = ['a', 'b', 'c'];\r\nlist.shuffle();\r\n```\r\n```\r\n-> ['c', 'a', 'b']\r\n```\r\n\r\n**Array.first();**\r\n```javascript\r\nvar list = ['a', 'b', 'c'];\r\nlist.first();\r\n```\r\n```\r\n-> 'a'\r\n```\r\n\r\n**Array.last();**\r\n```javascript\r\nvar list = ['a', 'b', 'c'];\r\nlist.last();\r\n```\r\n```\r\n-> 'c'\r\n```\r\n\r\n**Array.inArray(item);**\r\n```javascript\r\nvar list = ['a', 'b', 'c'];\r\nlist.inArray('b');\r\n```\r\n```\r\n-> true\r\n```\r\n\r\n**Array.contains(item);**\r\n```javascript\r\nvar list = ['a', 'b', 'c'];\r\nlist.contains('b');\r\n```\r\n```\r\n-> true\r\n```\r\n\r\n**Array.isArray();**\r\n```javascript\r\nvar list = ['a', 'b', 'c'];\r\nlist.isArray();\r\n```\r\n```\r\n-> true\r\n```\r\n\r\n**Array.each(callback_loop(item, index, next_method, end_method), callback_end); Runs next loop when \"next\" method is executed.**\r\n```javascript\r\nvar list = ['a', 'b', 'c'];\r\nlist.each(function (item, i, next, end) {\r\n    console.log(\"item: \" + item );\r\n    setTimeout(function () {\r\n        next();\r\n    }, 3000);\r\n}, function () {\r\n    console.log(\"End\");\r\n});\r\n```\r\n```\r\n-> item: a // Wait 3 seconds;\r\n-> item: b // Wait 3 seconds;\r\n-> item: c // Wait 3 seconds;\r\n-> End\r\n```\r\n\r\n**Array.each(callback_loop(item, index, next_method, end_method), callback_end); Runs next loop when \"next\" method is executed. Call \"end\" method for break the loop.**\r\n```javascript\r\nvar list = ['a', 'b', 'c'];\r\nlist.each(function (item, i, next, end) {\r\n    console.log(\"item: \" + item );\r\n    setTimeout(function () {\r\n        if (i === 1) {\r\n            end(\"Bye!\");\r\n        } else {\r\n            next();\r\n        }\r\n    }, 3000);\r\n}, function (data) {\r\n    if (data) {\r\n        console.log(\"End: \" + data);\r\n    } else {\r\n        console.log(\"End\");\r\n    }\r\n});\r\n```\r\n```\r\n-> item: a // Wait 3 seconds;\r\n-> item: b // Wait 3 seconds;\r\n-> End: Bye!\r\n```\r\n\r\n**Object.getKeys(keys);**\r\n```javascript\r\nvar spells = {\"fire\": 5, \"ice\": 4, \"electro\": 6, \"wind\": 7};\r\nspells.getKeys(\"fire\");\r\n```\r\n```\r\n-> {\"fire\": 5}\r\n```\r\n\r\n```javascript\r\nvar spells = {\"fire\": 5, \"ice\": 4, \"electro\": 6, \"wind\": 7};\r\nspells.getKeys([\"fire\", \"ice\"]);\r\n```\r\n```\r\n-> {\"fire\": 5, \"ice\": 4}\r\n```\r\n\r\n**Object.extend(obj);**\r\n```javascript\r\nvar spells = {\"fire\": 5, \"ice\": 4};\r\nvar newspells = {\"electro\": 6, \"wind\": 7};\r\nspells.extend(newspells);\r\n```\r\n```\r\n-> {\"fire\": 5, \"ice\": 4, \"electro\": 6, \"wind\": 7}\r\n```\r\n\r\n**Object.remove(keys);**\r\n```javascript\r\nvar spells = {\"fire\": 5, \"ice\": 4, \"electro\": 6, \"wind\": 7};\r\nspells.remove(\"fire\");\r\n```\r\n```\r\n-> {\"ice\": 4, \"electro\": 6, \"wind\": 7}\r\n```\r\n\r\n```javascript\r\nvar spells = {\"fire\": 5, \"ice\": 4, \"electro\": 6, \"wind\": 7};\r\nspells.remove([\"fire\", \"ice\"]);\r\n```\r\n```\r\n-> {\"electro\": 6, \"wind\": 7}\r\n```\r\n\r\n**Object.isObject();**\r\n```javascript\r\nvar list = ['a', 'b', 'c'];\r\nlist.isObject();\r\n```\r\n```\r\n-> true\r\n```\r\n\r\n**Boolean.isBoolean();**\r\n```javascript\r\nvar boh = false;\r\nboh.isBoolean();\r\n```\r\n```\r\n-> true\r\n```\r\n\r\n**Function.isFunction();**\r\n```javascript\r\nvar fun = function () { return \"hi\"; };\r\nfun.isFunction();\r\n```\r\n```\r\n-> true\r\n```\r\n\r\n**String.isString();**\r\n```javascript\r\nvar talk = \"hi!\";\r\ntalk.isString();\r\n```\r\n```\r\n-> true\r\n```\r\n\r\n**String.capitalize();**\r\n```javascript\r\nvar spell = \"abracadabra\";\r\nspell.capitalize();\r\n```\r\n```\r\n-> Abracadabra\r\n```\r\n\r\n**String.repeatify(num);**\r\n```javascript\r\n\"hi\".reatify(5);\r\n```\r\n```\r\n-> ['hi','hi','hi','hi','hi']\r\n```\r\n\r\n**String.dos2unix(); Replace dos endline**\r\n```javascript\r\nstring.dos2unix();\r\n```\r\n\r\n\r\n**(Number).times(callback(iteration)); Iterates function \"number\" times.**\r\n```javascript\r\n(3).times(function (i) {\r\n    console.log(\"hi!\");\r\n});\r\n```\r\n```\r\n-> hi!\r\n-> hi!\r\n-> hi!\r\n```\r\n\r\n**Number.isNumber();**\r\n```javascript\r\nvar num = 5.2;\r\nnum.isNumber();\r\n```\r\n```\r\n-> true\r\n```\r\n\r\n**Number.isInteger();**\r\n```javascript\r\nvar num = 5;\r\nnum.isInteger();\r\n```\r\n```\r\n-> true\r\n```\r\n\r\n##Only Node.Js tools:\r\n**sb.cp(\"file\",\"copy\"); Copy file with Promises**\r\n\r\n```javascript\r\nsb.cp(\"file.txt\", \"copyfile.txt\")\r\n.then(function (res) {\r\n    console.log(\"OK\");\r\n})\r\n.catch(function (err) {\r\n    console.log(err);\r\n})\r\n```\r\n\r\n[![NPM](https://nodei.co/npm/spellbook.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/spellbook/)\r\n\r\n## License\r\nAll the code here is under MIT license. Which means you could do virtually anything with the code.\r\nI will appreciate it very much if you keep an attribution where appropriate.\r\n\r\nThe MIT License (MIT)\r\nCopyright (c) 2015 Josep Subils Rigau (josep@spellbook.io)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "google": "UA-71301051-1",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}